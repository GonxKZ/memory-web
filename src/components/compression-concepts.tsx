import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"

interface CompressionTechniqueProps {
  technique: "lz" | "huffman" | "delta" | "dictionary"
  name: string
  description: string
  compressionRatio: number
  speed: "fast" | "medium" | "slow"
  useCases: string[]
  technicalDetails: string
  examples: string[]
}

export function CompressionTechnique({ 
  technique,
  name,
  description,
  compressionRatio,
  speed,
  useCases,
  technicalDetails,
  examples
}: CompressionTechniqueProps) {
  // Technique icons and colors
  const techInfo = {
    "lz": {
      icon: "üóúÔ∏è",
      color: "#3b82f6"
    },
    "huffman": {
      icon: "üå≥",
      color: "#10b981"
    },
    "delta": {
      icon: "üî∫",
      color: "#8b5cf6"
    },
    "dictionary": {
      icon: "üìñ",
      color: "#f59e0b"
    }
  }

  const speedInfo = {
    "fast": { label: "R√°pida", color: "#10b981" },
    "medium": { label: "Media", color: "#f59e0b" },
    "slow": { label: "Lenta", color: "#ef4444" }
  }

  const currentTech = techInfo[technique]
  const currentSpeed = speedInfo[speed]

  return (
    <Card className="h-full">
      <CardHeader>
        <CardTitle 
          className="flex items-center"
          style={{ color: currentTech.color }}
        >
          <span className="mr-2 text-2xl">{currentTech.icon}</span>
          {name}
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          <div className="text-gray-700">
            {description}
          </div>
          
          <div className="bg-blue-50 p-4 rounded-lg">
            <div className="font-semibold text-blue-800 mb-2">Detalles T√©cnicos</div>
            <div className="text-blue-700 text-sm">
              {technicalDetails}
            </div>
          </div>
          
          <div className="grid grid-cols-2 gap-3">
            <div className="bg-gray-50 p-3 rounded text-center">
              <div className="text-xs text-gray-500">Ratio de compresi√≥n</div>
              <div className="font-bold text-lg">{compressionRatio}:1</div>
            </div>
            <div 
              className="p-3 rounded text-center"
              style={{ backgroundColor: `${currentSpeed.color}20` }}
            >
              <div className="text-xs text-gray-500">Velocidad</div>
              <div 
                className="font-bold"
                style={{ color: currentSpeed.color }}
              >
                {currentSpeed.label}
              </div>
            </div>
          </div>
          
          <div>
            <div className="font-semibold mb-2">Casos de uso:</div>
            <ul className="space-y-2">
              {useCases.map((useCase, index) => (
                <li key={index} className="flex items-start">
                  <span className="mr-2 text-gray-500">‚Ä¢</span>
                  <span className="text-gray-700">{useCase}</span>
                </li>
              ))}
            </ul>
          </div>
          
          <div>
            <div className="font-semibold mb-2">Ejemplos:</div>
            <ul className="space-y-2">
              {examples.map((example, index) => (
                <li key={index} className="flex items-start">
                  <span className="mr-2 text-gray-500">‚Ä¢</span>
                  <span className="text-gray-700">{example}</span>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </CardContent>
    </Card>
  )
}

interface MemoryCompressionConceptsProps {
  techniques: {
    technique: "lz" | "huffman" | "delta" | "dictionary"
    name: string
    description: string
    compressionRatio: number
    speed: "fast" | "medium" | "slow"
    useCases: string[]
    technicalDetails: string
    examples: string[]
  }[]
}

export function MemoryCompressionConcepts({ techniques }: MemoryCompressionConceptsProps) {
  return (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-3xl font-bold text-gray-900 mb-4">Compresi√≥n de Memoria</h2>
        <p className="text-gray-600 max-w-3xl mx-auto">
          La compresi√≥n de memoria permite almacenar m√°s datos en el mismo espacio f√≠sico, 
          similar a empaquetar ropa de manera eficiente para un viaje. Esto es especialmente 
          √∫til cuando se tiene memoria limitada pero se necesita almacenar grandes cantidades 
          de datos. La compresi√≥n de datos es una t√©cnica fundamental en inform√°tica que permite 
          reducir el tama√±o de los archivos y optimizar el almacenamiento y la transmisi√≥n de informaci√≥n.
        </p>
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {techniques.map((technique, index) => (
          <CompressionTechnique
            key={index}
            technique={technique.technique}
            name={technique.name}
            description={technique.description}
            compressionRatio={technique.compressionRatio}
            speed={technique.speed}
            useCases={technique.useCases}
            technicalDetails={technique.technicalDetails}
            examples={technique.examples}
          />
        ))}
      </div>
      
      <Card className="bg-blue-50 border-blue-200">
        <CardContent className="p-6">
          <div className="flex items-start">
            <span className="text-2xl mr-3">‚öñÔ∏è</span>
            <div>
              <h3 className="font-semibold text-blue-800 mb-2">Equilibrio en compresi√≥n</h3>
              <p className="text-blue-700 mb-3">
                La compresi√≥n de memoria implica un equilibrio fundamental entre tres factores:
              </p>
              <ul className="space-y-3">
                <li className="flex items-start">
                  <span className="mr-2 font-bold">1.</span>
                  <div>
                    <span className="font-semibold">Ratio de compresi√≥n:</span>
                    <span> Cu√°nto se reduce el tama√±o (m√°s es mejor). En sistemas modernos, ratios de 2:1 a 5:1 son comunes en aplicaciones pr√°cticas.</span>
                  </div>
                </li>
                <li className="flex items-start">
                  <span className="mr-2 font-bold">2.</span>
                  <div>
                    <span className="font-semibold">Velocidad:</span>
                    <span> Qu√© tan r√°pido se comprime/descomprime (m√°s r√°pido es mejor). La velocidad afecta directamente el rendimiento del sistema, especialmente en aplicaciones en tiempo real.</span>
                  </div>
                </li>
                <li className="flex items-start">
                  <span className="mr-2 font-bold">3.</span>
                  <div>
                    <span className="font-semibold">Complejidad:</span>
                    <span> Cu√°ntos recursos se necesitan (menos es mejor). La complejidad afecta el consumo de CPU, memoria y energ√≠a, factores cr√≠ticos en sistemas embebidos y m√≥viles.</span>
                  </div>
                </li>
              </ul>
              <p className="text-blue-700 mt-3">
                Las diferentes t√©cnicas ofrecen distintos puntos en este espacio de equilibrio, 
                permitiendo elegir la mejor opci√≥n para cada situaci√≥n espec√≠fica. En la pr√°ctica, 
                muchas implementaciones modernas combinan m√∫ltiples t√©cnicas: un compilador puede 
                aplicar tiling seguido de vectorizaci√≥n y prefetching autom√°tico para obtener 
                mejoras compuestas en el rendimiento.
              </p>
              
              <div className="mt-4 p-3 bg-white rounded-lg border">
                <div className="font-semibold text-gray-800 mb-2">Visualizaci√≥n del proceso de compresi√≥n:</div>
                <div className="font-mono text-sm">
                  <div>// Datos originales: 1000 bytes</div>
                  <div>[AAAAAAAABBBBBBBBCCCCCCCCDDDDDDDD...] // Repetici√≥n de patrones</div>
                  <div className="my-1 text-center">‚Üì Compresi√≥n</div>
                  <div>// Datos comprimidos: 200 bytes</div>
                  <div>[(A,8)(B,8)(C,8)(D,8)...] // Tuplas de (caracter, conteo)</div>
                  <div className="my-1 text-center">‚Üì Descompresi√≥n</div>
                  <div>// Datos restaurados: 1000 bytes</div>
                  <div>[AAAAAAAABBBBBBBBCCCCCCCCDDDDDDDD...] // Id√©nticos a los originales</div>
                </div>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}